#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	СформироватьДополнительныеНачисления();
	
	СформироватьУдержания();
	
	РассчитатьНДФЛ();
	
	СформироватьВзаиморасчетыССотрудниками();
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции 

Процедура СформироватьДополнительныеНачисления()
	
	ДобавитьЗаписиФиксированнойПремии();
	
	Движения.ВКМ_ДополнительныеНачисления.Записать();	
	
КонецПроцедуры 

Процедура СформироватьУдержания()
	
	ДобавитьЗаписиНДФЛ();
	
	Движения.ВКМ_Удержания.Записать();
	
КонецПроцедуры

Процедура ДобавитьЗаписиФиксированнойПремии()
	
	Для Каждого Строка Из СписокСотрудников Цикл
		Движение = Движения.ВКМ_ДополнительныеНачисления.Добавить();
		Движение.ПериодРегистрации = ПериодРегистрации;
		Движение.Подразделение = Подразделение;
		Движение.Сотрудник = Строка.Сотрудник;
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.Премия;
		Движение.ПериодДействияНачало = НачалоМесяца(ПериодРегистрации);
		Движение.ПериодДействияКонец = КонецМесяца(ПериодРегистрации);
		Движение.Результат = Строка.СуммаПремии;
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьЗаписиНДФЛ()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВКМ_НачислениеФиксированнойПремииСписокСотрудников.Сотрудник,
		|	ВКМ_НачислениеФиксированнойПремии.Подразделение
		|ИЗ
		|	Документ.ВКМ_НачислениеФиксированнойПремии.СписокСотрудников КАК
		|		ВКМ_НачислениеФиксированнойПремииСписокСотрудников
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВКМ_НачислениеФиксированнойПремии КАК ВКМ_НачислениеФиксированнойПремии
		|		ПО ВКМ_НачислениеФиксированнойПремииСписокСотрудников.Ссылка = ВКМ_НачислениеФиксированнойПремии.Ссылка
		|ГДЕ
		|	ВКМ_НачислениеФиксированнойПремииСписокСотрудников.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка); 
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_Удержания.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, Выборка);
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
		Движение.ПериодРегистрации = ПериодРегистрации;
		Движение.БазовыйПериодНачало = НачалоМесяца(ПериодРегистрации);
		Движение.БазовыйПериодКонец = КонецМесяца(ПериодРегистрации);
		Движение.ПериодДействияНачало = НачалоМесяца(ПериодРегистрации);
		Движение.ПериодДействияКонец = КонецМесяца(ПериодРегистрации);
	КонецЦикла;
	
КонецПроцедуры

Процедура РассчитатьНДФЛ()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
	|
	|	ВКМ_Удержания.НомерСтроки,
	|	ЕСТЬNULL(ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.РезультатБаза, 0) КАК БазаДоп,
	|	ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.РегистраторРазрез
	|ПОМЕСТИТЬ ВТДанные
	|ИЗ
	|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания.БазаВКМ_ДополнительныеНачисления(&Измерения, &Измерения, &Разрезы,
	|			Регистратор = &Ссылка) КАК ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления
	|		ПО ВКМ_Удержания.НомерСтроки = ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.НомерСтроки
	|ГДЕ
	|	ВКМ_Удержания.Регистратор = &Ссылка
	|	И ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.РегистраторРазрез = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДанные.НомерСтроки КАК НомерСтроки,
	|	СУММА(ВТДанные.БазаДоп) КАК БазаДоп
	|ИЗ
	|	ВТДанные КАК ВТДанные
	|СГРУППИРОВАТЬ ПО
	|	ВТДанные.НомерСтроки";
	
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	Измерения.Добавить("Подразделение");
	
	Разрезы = Новый Массив;
	Разрезы.Добавить("Регистратор");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Измерения", Измерения);
	Запрос.УстановитьПараметр("Разрезы", Разрезы);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Строка = Движения.ВКМ_Удержания[Выборка.НомерСтроки - 1];
		
		База = Выборка.БазаДоп;
		Если База <> 0 Тогда
			Строка.Показатель = База;
			Строка.Результат = База * 13 / 100;
		КонецЕсли;
	КонецЦикла;
	
	Движения.ВКМ_Удержания.Записать(, Истина);
	
КонецПроцедуры

Процедура СформироватьВзаиморасчетыССотрудниками()
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_НачислениеФиксированнойПремииВКМ_СписокСотрудников.Сотрудник КАК Сотрудник,
		|	ВКМ_НачислениеФиксированнойПремии.Подразделение КАК Подразделение,
		|	ВКМ_НачислениеФиксированнойПремииВКМ_СписокСотрудников.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТ_Данные
		|ИЗ
		|	Документ.ВКМ_НачислениеФиксированнойПремии.СписокСотрудников КАК ВКМ_НачислениеФиксированнойПремииВКМ_СписокСотрудников
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВКМ_НачислениеФиксированнойПремии КАК ВКМ_НачислениеФиксированнойПремии
		|		ПО ВКМ_НачислениеФиксированнойПремииВКМ_СписокСотрудников.Ссылка = ВКМ_НачислениеФиксированнойПремии.Ссылка
		|ГДЕ
		|	ВКМ_НачислениеФиксированнойПремииВКМ_СписокСотрудников.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_НачислениеФиксированнойПремииВКМ_СписокСотрудников.Сотрудник,
		|	ВКМ_НачислениеФиксированнойПремии.Подразделение,
		|	ВКМ_НачислениеФиксированнойПремииВКМ_СписокСотрудников.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Данные.Сотрудник КАК Сотрудник,
		|	ВТ_Данные.Подразделение КАК Подразделение,
		|	СУММА(ЕСТЬNULL(ВКМ_ДополнительныеНачисления.Результат, 0)) КАК ДопНачисления,
		|	0 КАК Удержания
		|ПОМЕСТИТЬ ВТ_Взаиморасчеты
		|ИЗ
		|	ВТ_Данные КАК ВТ_Данные
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
		|		ПО ВТ_Данные.Сотрудник = ВКМ_ДополнительныеНачисления.Сотрудник
		|			И ВТ_Данные.Подразделение = ВКМ_ДополнительныеНачисления.Подразделение
		|			И ВТ_Данные.Ссылка = ВКМ_ДополнительныеНачисления.Регистратор
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Данные.Сотрудник,
		|	ВТ_Данные.Подразделение
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Данные.Сотрудник,
		|	ВТ_Данные.Подразделение,
		|	0,
		|	СУММА(ЕСТЬNULL(Удержания.Результат, 0))
		|ИЗ
		|	ВТ_Данные КАК ВТ_Данные
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания КАК Удержания
		|		ПО ВТ_Данные.Сотрудник = Удержания.Сотрудник
		|			И ВТ_Данные.Подразделение = Удержания.Подразделение
		|			И ВТ_Данные.Ссылка = Удержания.Регистратор
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Данные.Сотрудник,
		|	ВТ_Данные.Подразделение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Взаиморасчеты.Сотрудник КАК Сотрудник,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_Взаиморасчеты.Подразделение) КАК Подразделение,
		|	СУММА(ВТ_Взаиморасчеты.ДопНачисления) КАК ДопНачисления,
		|	СУММА(ВТ_Взаиморасчеты.Удержания) КАК Удержания
		|ИЗ
		|	ВТ_Взаиморасчеты КАК ВТ_Взаиморасчеты
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Взаиморасчеты.Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СуммаВзаиморасчетов = Выборка.ДопНачисления - Выборка.Удержания;
		Если СуммаВзаиморасчетов = 0 Тогда
			Продолжить;
		КонецЕсли;
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		Движение.Период = ПериодРегистрации;
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.Сумма = СуммаВзаиморасчетов;
	КонецЦикла;
	
КонецПроцедуры


#КонецОбласти
	
#КонецЕсли
