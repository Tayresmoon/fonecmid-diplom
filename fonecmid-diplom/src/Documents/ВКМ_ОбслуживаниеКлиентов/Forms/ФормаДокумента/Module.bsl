
#Область ОписаниеПеременных

&НаКлиенте
Перем СтруктураДляТелеграма;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	СтруктураДляТелеграма = Новый Структура;
	
	Если Параметры.Ключ.Пустая() Тогда
		ТекстСообщения = "Создан документ %1, назначенный специалист %2";
		СтруктураДляТелеграма.Вставить("ТекстСообщения", ТекстСообщения);
		СтруктураДляТелеграма.Вставить("ЭтоНовый", Истина);
	Иначе
		ТекстСообщения = ПолучитьТекстИзменения();
		СтруктураДляТелеграма.Вставить("ТекстСообщения", ТекстСообщения);
		СтруктураДляТелеграма.Вставить("ЭтоНовый", Ложь);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды 
	
	Если ЗначениеЗаполнено(СтруктураДляТелеграма.ТекстСообщения) Тогда
		Если СтруктураДляТелеграма.ЭтоНовый Тогда
			СообщениеТелеграм = СтрШаблон(СтруктураДляТелеграма.ТекстСообщения, Объект.Ссылка, Объект.Специалист);
		Иначе
			 СообщениеТелеграм = СтруктураДляТелеграма.ТекстСообщения;
		КонецЕсли; 
		ЗаписатьСообщениеВСправочник(СообщениеТелеграм);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
	ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

&НаСервере
Функция ПолучитьТекстИзменения()

	ТекстСообщения = "";
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиентов.Дата КАК Дата,
		|	ВКМ_ОбслуживаниеКлиентов.Специалист КАК Специалист,
		|	ВКМ_ОбслуживаниеКлиентов.ВремяНачалаРабот КАК ВремяНачалаРабот,
		|	ВКМ_ОбслуживаниеКлиентов.ВремяОкончанияРабот КАК ВремяОкончанияРабот,
		|	ВКМ_ОбслуживаниеКлиентов.ДатаПроведенияРабот КАК ДатаПроведенияРабот
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиентов КАК ВКМ_ОбслуживаниеКлиентов
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиентов.Ссылка = &Ссылка"; 
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		Строки = Новый Массив;
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если ВыборкаДетальныеЗаписи.Дата <> Объект.Дата Тогда
				Строки.Добавить(СтрШаблон("Дата: %1;", Объект.Дата));
			КонецЕсли;
			Если ВыборкаДетальныеЗаписи.Специалист <> Объект.Специалист Тогда
				Строки.Добавить(СтрШаблон("Специалист: %1;", Объект.Специалист));
			КонецЕсли;
			Если ВыборкаДетальныеЗаписи.ДатаПроведенияРабот <> Объект.ДатаПроведенияРабот Тогда
				Строки.Добавить(СтрШаблон("Дата проведения работ: %1;", Лев(Объект.ДатаПроведенияРабот, 10)));
			КонецЕсли; 
			Если ВыборкаДетальныеЗаписи.ВремяНачалаРабот <> Объект.ВремяНачалаРабот Тогда
				Строки.Добавить(СтрШаблон("Время начала работ: %1;", Прав(Объект.ВремяНачалаРабот, 8)));
			КонецЕсли;
			Если ВыборкаДетальныеЗаписи.ВремяОкончанияРабот <> Объект.ВремяОкончанияРабот Тогда
				Строки.Добавить(СтрШаблон("Время окончания работ: %1;", Прав(Объект.ВремяОкончанияРабот, 8)));
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Строки.Количество() >= 1 Тогда
		ЗаголовокСообщения = СтрШаблон("В документе %1 внесены изменения:", Объект.Ссылка);	 
		Строки.Вставить(0, ЗаголовокСообщения);
		ТекстСообщения = СтрСоединить(Строки, Символы.ПС);

	Иначе
		ТекстСообщения = "";
	КонецЕсли;
	
	Возврат ТекстСообщения;
	
КонецФункции

&НаСервере
Процедура ЗаписатьСообщениеВСправочник(СообщениеТелеграм) 
	 
	СообщениеДляБота = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
	СообщениеДляБота.ТекстСообщения = СообщениеТелеграм;
	СообщениеДляБота.Наименование = Объект.Ссылка;
	СообщениеДляБота.Записать();

КонецПроцедуры

#КонецОбласти 




















