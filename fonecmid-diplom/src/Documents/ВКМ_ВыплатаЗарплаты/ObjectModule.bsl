
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_ВыплатаЗарплатыВыплаты.Сотрудник КАК Сотрудник,
		|	СУММА(ВКМ_ВыплатаЗарплатыВыплаты.Сумма) КАК Сумма
		|ИЗ
		|	Документ.ВКМ_ВыплатаЗарплаты.Выплаты КАК ВКМ_ВыплатаЗарплатыВыплаты
		|ГДЕ
		|	ВКМ_ВыплатаЗарплатыВыплаты.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ВыплатаЗарплатыВыплаты.Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		Движение.Период = ПериодРегистрации;
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.Сумма = Выборка.Сумма;	
	КонецЦикла;
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.БлокироватьДляИзменения = Истина; 
	
	Движения.Записать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МИНИМУМ(ВКМ_ВыплатаЗарплатыВыплаты.НомерСтроки) КАК НомерСтроки,
		|	ВКМ_ВыплатаЗарплатыВыплаты.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ ВТДанные
		|ИЗ
		|	Документ.ВКМ_ВыплатаЗарплаты.Выплаты КАК ВКМ_ВыплатаЗарплатыВыплаты
		|ГДЕ
		|	ВКМ_ВыплатаЗарплатыВыплаты.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ВыплатаЗарплатыВыплаты.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_ВзаиморасчетыССотрудникамиОстатки.Сотрудник КАК Сотрудник,
		|	ВКМ_ВзаиморасчетыССотрудникамиОстатки.СуммаОстаток КАК СуммаОстаток,
		|	ВТДанные.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	ВТДанные КАК ВТДанные
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВКМ_ВзаиморасчетыССотрудниками.Остатки(&Период, ) КАК ВКМ_ВзаиморасчетыССотрудникамиОстатки
		|		ПО ВТДанные.Сотрудник = ВКМ_ВзаиморасчетыССотрудникамиОстатки.Сотрудник
		|ГДЕ
		|	ВКМ_ВзаиморасчетыССотрудникамиОстатки.СуммаОстаток < 0";
	
	МоментВремениНовый = Новый МоментВремени(ПериодРегистрации, Ссылка);
	ГраницаНовый = Новый Граница(МоментВремениНовый, ВидГраницы.Включая);
	Запрос.УстановитьПараметр("Период", ГраницаНовый);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Ошибки = Неопределено;
	Пока Выборка.Следующий() Цикл	
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Объект.Выплаты[%1].Сотрудник",
				СтрШаблон(НСтр("ru='Отрицательный остаток на строке %1'"), Выборка.НомерСтроки-1),"Объект.Выплаты", Выборка.НомерСтроки-1,
				НСтр("ru='Отрицательный остаток на строке %1'"), Выборка.НомерСтроки-1);
	КонецЦикла;
	
	Если Ошибки <> Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки,Отказ);
	КонецЕсли;
	 
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПоОстаткамРегистраВзаиморасчетов() Экспорт

	Выплаты.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_ВзаиморасчетыССотрудникамиОстатки.Сотрудник,
		|	ВКМ_ВзаиморасчетыССотрудникамиОстатки.СуммаОстаток
		|ИЗ
		|	РегистрНакопления.ВКМ_ВзаиморасчетыССотрудниками.Остатки(&Период,) КАК ВКМ_ВзаиморасчетыССотрудникамиОстатки
		|ГДЕ
		|	ВКМ_ВзаиморасчетыССотрудникамиОстатки.СуммаОстаток > 0"; 
	
	Запрос.УстановитьПараметр("Период", КонецМесяца(ПериодРегистрации));
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтрокаВыплата = Выплаты.Добавить();
		СтрокаВыплата.Сотрудник = Выборка.Сотрудник;
		СтрокаВыплата.Сумма = Выборка.СуммаОстаток;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли