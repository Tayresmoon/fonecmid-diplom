

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда  
	
#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроверитьУстановленныеОклады(Отказ);
	
	СформироватьОсновныеНачисления();
	
	СформироватьДополнительныеНачисления();
	
	СформироватьУдержания();
	
	РассчитатьОклад();
	
	РассчитатьОтпуск();
	
	РассчитатьПроцентОтРабот();
	
	РассчитатьНДФЛ();
	
	СформироватьВзаиморасчетыССотрудниками();
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьОсновныеНачисления()
	
	ДобавитьЗаписиПоОкладу();
	
	ДобавитьЗаписиПоОтпуску();
	
	Движения.ВКМ_ОсновныеНачисления.Записать();
	
КонецПроцедуры

Процедура СформироватьДополнительныеНачисления()
	
	ДобавитьЗаписиПроцентОтРабот();
	
	Движения.ВКМ_ДополнительныеНачисления.Записать();
	
КонецПроцедуры

Процедура СформироватьУдержания()
	
	ДобавитьЗаписиНДФЛ();
	
	Движения.ВКМ_Удержания.Записать();
	
КонецПроцедуры

Процедура ПроверитьУстановленныеОклады(Отказ)
	
	Отбор = Новый Структура;
	Отбор.Вставить("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	
	НайденныеСтроки = ОсновныеНачисления.НайтиСтроки(Отбор);
	Если Не ЗначениеЗаполнено(НайденныеСтроки) Тогда
		Возврат;
	КонецЕсли;
	
	ДатаНачалаОклада = НачалоМесяца(ОсновныеНачисления[0].ДатаНачала);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_НачисленияЗарплатыОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	МИНИМУМ(ВКМ_НачисленияЗарплатыОсновныеНачисления.НомерСтроки) КАК НомерСтроки
		|ПОМЕСТИТЬ ВТ_ДанныеДокумента
		|ИЗ
		|	Документ.ВКМ_НачисленияЗарплаты.ОсновныеНачисления КАК ВКМ_НачисленияЗарплатыОсновныеНачисления
		|ГДЕ
		|	ВКМ_НачисленияЗарплатыОсновныеНачисления.Ссылка = &Ссылка
		|	И ВКМ_НачисленияЗарплатыОсновныеНачисления.ВидРасчета = &ВидРасчета
		|
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_НачисленияЗарплатыОсновныеНачисления.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеДокумента.НомерСтроки КАК НомерСтроки,
		|	ВТ_ДанныеДокумента.Сотрудник КАК Сотрудник
		|ИЗ
		|	ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(
		|				&НачалоПериода,
		|				Сотрудник В
		|					(ВЫБРАТЬ
		|						ВТ_ДанныеДокумента.Сотрудник КАК Сотрудник
		|					ИЗ
		|						ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
		|		ПО ВТ_ДанныеДокумента.Сотрудник = ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник
		|ГДЕ
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("НачалоПериода", ДатаНачалаОклада);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ТекстОшибки = СтрШаблон("На строке %1 не указан оклад у сотрудника %2", Выборка.НомерСтроки, Выборка.Сотрудник);
		ТекстПоля = СтрШаблон("ВКМ_ОсновныеНачисления[%1].Сотрудник", Выборка.НомерСтроки - 1);;
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, ТекстПоля, , );
		Отказ = Истина;
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьЗаписиПоОкладу()
	
	Отбор = Новый Структура;
	Отбор.Вставить("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	
	НайденныеСтроки = ОсновныеНачисления.НайтиСтроки(Отбор);
	Если Не ЗначениеЗаполнено(НайденныеСтроки) Тогда
		Возврат;
	КонецЕсли;
	
	ДатаНачалаОклада = НачалоМесяца(ОсновныеНачисления[0].ДатаНачала);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОсновныеНачисленияЗарплата.Сотрудник КАК Сотрудник,
		|	ОсновныеНачисленияЗарплата.Подразделение КАК Подразделение,
		|	ОсновныеНачисленияЗарплата.ВидРасчета КАК ВидРасчета,
		|	ОсновныеНачисленияЗарплата.ДатаНачала КАК ДатаНачала,
		|	ОсновныеНачисленияЗарплата.ДатаОкончания КАК ДатаОкончания
		|ПОМЕСТИТЬ ВТ_ДанныеДокумента
		|ИЗ
		|	Документ.ВКМ_НачисленияЗарплаты.ОсновныеНачисления КАК ОсновныеНачисленияЗарплата
		|ГДЕ
		|	ОсновныеНачисленияЗарплата.Ссылка = &Ссылка
		|	И ОсновныеНачисленияЗарплата.ВидРасчета = &ВидРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Период КАК Период,
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Оклад КАК Оклад
		|ПОМЕСТИТЬ ВТ_ДанныеОкладов
		|ИЗ
		|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&НачалоПериода, Сотрудник В
		|		(ВЫБРАТЬ
		|			ВТ_ДанныеДокумента.Сотрудник КАК Сотрудник
		|		ИЗ
		|			ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеДокумента.Сотрудник КАК Сотрудник,
		|	ВТ_ДанныеДокумента.Подразделение КАК Подразделение,
		|	ВТ_ДанныеДокумента.ВидРасчета КАК ВидРасчета,
		|	ВТ_ДанныеДокумента.ДатаНачала КАК ПериодДействияНачало,
		|	ВТ_ДанныеДокумента.ДатаОкончания КАК ПериодДействияКонец,
		|	ЕстьNULL(ВТ_ДанныеОкладов.Оклад, 0) КАК Показатель
		|ИЗ
		|	ВТ_ДанныеДокумента КАК ВТ_ДанныеДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеОкладов КАК ВТ_ДанныеОкладов
		|		ПО ВТ_ДанныеДокумента.Сотрудник = ВТ_ДанныеОкладов.Сотрудник"; 
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Запрос.УстановитьПараметр("НачалоПериода", ДатаНачалаОклада);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		Движение.ПериодРегистрации = ПериодРегистрации;
		ЗаполнитьЗначенияСвойств(Движение, Выборка);
	КонецЦикла;
		
КонецПроцедуры

Процедура ДобавитьЗаписиПоОтпуску()
	
	Отбор = Новый Структура;
	Отбор.Вставить("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	
	НайденныеСтроки = ОсновныеНачисления.НайтиСтроки(Отбор);
	Если Не ЗначениеЗаполнено(НайденныеСтроки) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Строка Из НайденныеСтроки Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
		Движение.ПериодРегистрации = ПериодРегистрации;
		Движение.Подразделение = Строка.Подразделение;
		Движение.Сотрудник = Строка.Сотрудник;
		Движение.ВидРасчета = Строка.ВидРасчета;
		Движение.ПериодДействияНачало = Строка.ДатаНачала;
		Движение.ПериодДействияКонец = Строка.ДатаОкончания;
		Движение.БазовыйПериодНачало = НачалоМесяца(ДобавитьМесяц(Строка.ДатаНачала, -12));
		Движение.БазовыйПериодКонец =  КонецМесяца(ДобавитьМесяц(Строка.ДатаНачала, -1));
		Движение.ЧасовОтработано = (Строка.ДатаОкончания - Строка.ДатаНачала) / 10800 + 8;
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьЗаписиПроцентОтРабот()
	
	Отбор = Новый Структура;
	Отбор.Вставить("ВидРасчета", ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.ПроцентОтРабот);
	
	НайденныеСтроки = ДополнительныеНачисления.НайтиСтроки(Отбор);
	Если Не ЗначениеЗаполнено(НайденныеСтроки) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Строка Из НайденныеСтроки Цикл
		Движение = Движения.ВКМ_ДополнительныеНачисления.Добавить();
		Движение.ПериодРегистрации = ПериодРегистрации;
		Движение.Подразделение = Строка.Подразделение;
		Движение.Сотрудник = Строка.Сотрудник;
		Движение.ВидРасчета = Строка.ВидРасчета;
		Движение.ПериодДействияНачало = НачалоМесяца(ПериодРегистрации);
		Движение.ПериодДействияКонец = КонецМесяца(ПериодРегистрации);
	КонецЦикла;
	
Конецпроцедуры

Процедура ДобавитьЗаписиНДФЛ()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_НачисленияЗарплатыОсновныеНачисления.Сотрудник,
		|	ВКМ_НачисленияЗарплатыОсновныеНачисления.Подразделение
		|ИЗ
		|	Документ.ВКМ_НачисленияЗарплаты.ОсновныеНачисления КАК ВКМ_НачисленияЗарплатыОсновныеНачисления
		|ГДЕ
		|	ВКМ_НачисленияЗарплатыОсновныеНачисления.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ВКМ_НачисленияЗарплатыДополнительныеНачисления.Сотрудник,
		|	ВКМ_НачисленияЗарплатыДополнительныеНачисления.Подразделение
		|ИЗ
		|	Документ.ВКМ_НачисленияЗарплаты.ДополнительныеНачисления КАК ВКМ_НачисленияЗарплатыДополнительныеНачисления
		|ГДЕ
		|	ВКМ_НачисленияЗарплатыДополнительныеНачисления.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_Удержания.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, Выборка);
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
		Движение.ПериодРегистрации = ПериодРегистрации;
		Движение.БазовыйПериодНачало = НачалоМесяца(ПериодРегистрации);
		Движение.БазовыйПериодКонец = КонецМесяца(ПериодРегистрации);
		Движение.ПериодДействияНачало = НачалоМесяца(ПериодРегистрации);
		Движение.ПериодДействияКонец = КонецМесяца(ПериодРегистрации);
	КонецЦикла;
	
КонецПроцедуры

Процедура РассчитатьОклад()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки,
	|	ЕстьNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК Факт,
	|	ЕстьNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия, 0) КАК План
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Регистратор
	|	И ВидРасчета = &ВидРасчета) КАК ВКМ_ОсновныеНачисленияДанныеГрафика";
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Оклад);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		Если Выборка.План <> 0 Тогда
			Движение.Результат = Движение.Показатель * Выборка.Факт / Выборка.План;
		КонецЕсли;
		Движение.ЧасовОтработано = Выборка.Факт;
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	
КонецПроцедуры

Процедура РассчитатьОтпуск()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисления.НомерСтроки,
		|	ЕстьNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.РезультатБаза, 0) КАК БазаДоп,
		|	ЕстьNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.РезультатБаза, 0) КАК БазаОсн,
		|	ЕстьNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ЧасовОтработаноБаза, 0) КАК БазаЧасы,
		|	ЕстьNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеФактическийПериодДействия, 0) КАК Факт,
		|	ЕстьNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ЗначениеПериодДействия, 0) КАК План
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ДополнительныеНачисления(&Измерения, &Измерения,,
		|			Регистратор = &Регистратор
		|		И ВидРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления
		|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(&Измерения, &Измерения,,
		|			Регистратор = &Регистратор
		|		И ВидРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления
		|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Регистратор
		|		И ВидРасчета = &Отпуск) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
		|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки
		|ГДЕ
		|	ВКМ_ОсновныеНачисления.Регистратор = &Регистратор
		|	И ВКМ_ОсновныеНачисления.ВидРасчета = &Отпуск";
	
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	Измерения.Добавить("Подразделение");
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("Отпуск", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.Отпуск);
	Запрос.УстановитьПараметр("Измерения", Измерения);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ОсновныеНачисления[Выборка.НомерСтроки - 1];
		Если Выборка.План <> 0 Тогда
			Движение.Результат = (Выборка.БазаОсн + Выборка.БазаДоп) * Выборка.Факт / Выборка.БазаЧасы;
		КонецЕсли; 
	КонецЦикла; 
	
	
	Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
	
КонецПроцедуры

Процедура РассчитатьПроцентОтРабот()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 	
		"ВЫБРАТЬ
		|	ВКМ_ДополнительныеНачисления.НомерСтроки,
		|	СУММА(ВКМ_ВыполненныеСотрудникомРаботыОбороты.ЧасовКОплатеОборот) КАК ЧасовКОплате,
		|	СУММА(ВКМ_ВыполненныеСотрудникомРаботыОбороты.СуммаКОплатеОборот) КАК СуммаКОплате
		|ИЗ
		|	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Обороты(&ДатаНачала, &ДатаОкончания,
		|			Период,) КАК ВКМ_ВыполненныеСотрудникомРаботыОбороты
		|		ПО ВКМ_ДополнительныеНачисления.Сотрудник = ВКМ_ВыполненныеСотрудникомРаботыОбороты.Сотрудник
		|ГДЕ
		|	ВКМ_ДополнительныеНачисления.Регистратор = &Регистратор
		|	И ВКМ_ДополнительныеНачисления.ВидРасчета = &ВидРасчета
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ДополнительныеНачисления.НомерСтроки"; 
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.ПроцентОтРабот);
	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(ПериодРегистрации));
	ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Движение = Движения.ВКМ_ДополнительныеНачисления[ВыборкаДетальныеЗаписи.НомерСтроки - 1];
		Движение.Результат = ВыборкаДетальныеЗаписи.СуммаКОплате;
		Движение.Показатель = ВыборкаДетальныеЗаписи.ЧасовКОплате;
	КонецЦикла;
	
	Движения.ВКМ_ДополнительныеНачисления.Записать(, Истина);
	
КонецПроцедуры

Процедура РассчитатьНДФЛ()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВКМ_Удержания.НомерСтроки КАК НомерСтроки,
	               |	0 КАК БазаДоп,
	               |	ЕСТЬNULL(ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.РезультатБаза, 0) КАК БазаОсн,
	               |	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.РегистраторРазрез КАК РегистраторРазрез
	               |ПОМЕСТИТЬ ВТДанные
	               |ИЗ
	               |	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания.БазаВКМ_ОсновныеНачисления(&Измерения, &Измерения, &Разрезы, Регистратор = &Ссылка) КАК ВКМ_УдержанияБазаВКМ_ОсновныеНачисления
	               |		ПО ВКМ_Удержания.НомерСтроки = ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.НомерСтроки
	               |ГДЕ
	               |	ВКМ_Удержания.Регистратор = &Ссылка
	               |	И ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.РегистраторРазрез = &Ссылка
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ВКМ_Удержания.НомерСтроки,
	               |	ЕСТЬNULL(ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.РезультатБаза, 0),
	               |	0,
	               |	NULL
	               |ИЗ
	               |	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания.БазаВКМ_ДополнительныеНачисления(&Измерения, &Измерения, &Разрезы, Регистратор = &Ссылка) КАК ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления
	               |		ПО ВКМ_Удержания.НомерСтроки = ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.НомерСтроки
	               |ГДЕ
	               |	ВКМ_Удержания.Регистратор = &Ссылка
	               |	И ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.РегистраторРазрез = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТДанные.НомерСтроки КАК НомерСтроки,
	               |	СУММА(ВТДанные.БазаДоп) КАК БазаДоп,
	               |	СУММА(ВТДанные.БазаОсн) КАК БазаОсн
	               |ИЗ
	               |	ВТДанные КАК ВТДанные
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТДанные.НомерСтроки";
	
	Измерения = Новый Массив;
	Измерения.Добавить("Сотрудник");
	Измерения.Добавить("Подразделение");
	
	Разрезы = Новый Массив;
	Разрезы.Добавить("Регистратор");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Измерения", Измерения);
	Запрос.УстановитьПараметр("Разрезы", Разрезы);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Строка = Движения.ВКМ_Удержания[Выборка.НомерСтроки - 1];
		
		База = Выборка.БазаОсн + Выборка.БазаДоп;
		Если База <> 0 Тогда
			Строка.Показатель = База;
			Строка.Результат = База * 13 / 100;
		КонецЕсли;
	КонецЦикла;
	
	Движения.ВКМ_Удержания.Записать(, Истина);
	
КонецПроцедуры

Процедура СформироватьВзаиморасчетыССотрудниками()
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	
	Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления.Сотрудник КАК Сотрудник,
		|	ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления.Подразделение КАК Подразделение,
		|	ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТ_Данные
		|ИЗ
		|	Документ.ВКМ_НачисленияЗарплаты.ОсновныеНачисления КАК ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления
		|ГДЕ
		|	ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления.Сотрудник,
		|	ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления.Подразделение,
		|	ВКМ_НачисленияЗарплатыВКМ_ОсновныеНачисления.Ссылка
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВКМ_НачисленияЗарплатыВКМ_ДополнительныеНачисления.Сотрудник,
		|	ВКМ_НачисленияЗарплатыВКМ_ДополнительныеНачисления.Подразделение,
		|	ВКМ_НачисленияЗарплатыВКМ_ДополнительныеНачисления.Ссылка
		|ИЗ
		|	Документ.ВКМ_НачисленияЗарплаты.ДополнительныеНачисления КАК ВКМ_НачисленияЗарплатыВКМ_ДополнительныеНачисления
		|ГДЕ
		|	ВКМ_НачисленияЗарплатыВКМ_ДополнительныеНачисления.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_НачисленияЗарплатыВКМ_ДополнительныеНачисления.Сотрудник,
		|	ВКМ_НачисленияЗарплатыВКМ_ДополнительныеНачисления.Подразделение,
		|	ВКМ_НачисленияЗарплатыВКМ_ДополнительныеНачисления.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Данные.Сотрудник КАК Сотрудник,
		|	ВТ_Данные.Подразделение КАК Подразделение,
		|	СУММА(ЕСТЬNULL(ВКМ_ОсновныеНачисления.Результат, 0)) КАК ОснНачисления,
		|	0 КАК ДопНачисления,
		|	0 КАК Удержания
		|ПОМЕСТИТЬ ВТ_Взаиморасчеты
		|ИЗ
		|	ВТ_Данные КАК ВТ_Данные
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
		|		ПО ВТ_Данные.Сотрудник = ВКМ_ОсновныеНачисления.Сотрудник
		|			И ВТ_Данные.Подразделение = ВКМ_ОсновныеНачисления.Подразделение
		|			И ВТ_Данные.Ссылка = ВКМ_ОсновныеНачисления.Регистратор
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Данные.Сотрудник,
		|	ВТ_Данные.Подразделение
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Данные.Сотрудник,
		|	ВТ_Данные.Подразделение,
		|	0,
		|	СУММА(ЕСТЬNULL(ВКМ_ДополнительныеНачисления.Результат, 0)),
		|	0
		|ИЗ
		|	ВТ_Данные КАК ВТ_Данные
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
		|		ПО ВТ_Данные.Сотрудник = ВКМ_ДополнительныеНачисления.Сотрудник
		|			И ВТ_Данные.Подразделение = ВКМ_ДополнительныеНачисления.Подразделение
		|			И ВТ_Данные.Ссылка = ВКМ_ДополнительныеНачисления.Регистратор
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Данные.Сотрудник,
		|	ВТ_Данные.Подразделение
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Данные.Сотрудник,
		|	ВТ_Данные.Подразделение,
		|	0,
		|	0,
		|	СУММА(ЕСТЬNULL(ВКМ_Удержания.Результат, 0))
		|ИЗ
		|	ВТ_Данные КАК ВТ_Данные
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
		|		ПО ВТ_Данные.Сотрудник = ВКМ_Удержания.Сотрудник
		|			И ВТ_Данные.Подразделение = ВКМ_Удержания.Подразделение
		|			И ВТ_Данные.Ссылка = ВКМ_Удержания.Регистратор
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Данные.Сотрудник,
		|	ВТ_Данные.Подразделение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Взаиморасчеты.Сотрудник КАК Сотрудник,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_Взаиморасчеты.Подразделение) КАК Подразделение,
		|	СУММА(ВТ_Взаиморасчеты.ОснНачисления) КАК ОснНачисления,
		|	СУММА(ВТ_Взаиморасчеты.ДопНачисления) КАК ДопНачисления,
		|	СУММА(ВТ_Взаиморасчеты.Удержания) КАК Удержания
		|ИЗ
		|	ВТ_Взаиморасчеты КАК ВТ_Взаиморасчеты
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Взаиморасчеты.Сотрудник";
		
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СуммаВзаиморасчетов = Выборка.ОснНачисления + Выборка.ДопНачисления - Выборка.Удержания;
		Если СуммаВзаиморасчетов = 0 Тогда
			Продолжить;
		КонецЕсли;
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		Движение.Период = ПериодРегистрации;
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.Сумма = СуммаВзаиморасчетов;
	КонецЦикла;
	
КонецПроцедуры


#КонецОбласти


#КонецЕсли